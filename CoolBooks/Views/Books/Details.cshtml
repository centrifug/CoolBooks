@model BookWithReviewsViewModel

@{
    ViewData["Title"] = "Details";
    var routeUrl = Url.RouteUrl(ViewContext.RouteData.Values);
    var controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var action = this.ViewContext.RouteData.Values["action"].ToString();
    var route = ViewContext.RouteData.Values["id"];
}


<h1>@Html.DisplayFor(model => model.book.Title)</h1>

<div>
    <hr />
        
        <div class="mb-3" style="max-width: 100%;">
            <div style="background: #FFF1F2;" class="row no-gutters">
                <div class="col-md-4">
                    <img src=" @Html.DisplayFor(model => model.book.ImagePath)" class="card-img" alt="...">
                </div>
                <div class="col-md-8">
                    <div class="card-body border border-3 border-white rounded">
                        <dl class="row">
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.Title)
                            </dt>
                            <dd class = "col-sm-10">
                                @Html.DisplayFor(model => model.book.Title)
                            </dd>
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.Description)
                            </dt>
                            <dd class = "col-sm-10">
                                @Html.DisplayFor(model => model.book.Description)
                            </dd>
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.ISBN)
                            </dt>
                            <dd class = "col-sm-10">
                                @Html.DisplayFor(model => model.book.ISBN)
                            </dd>
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.Genres)
                            </dt>
                            <dd class = "col-sm-10">
                                @foreach (var genre in Model.book.Genres)
                                {
                                    <a class="link-secondary" asp-controller="Genres" asp-action="Details" asp-route-id="@genre.Id">@Html.DisplayFor(modelItem => genre.Name)</a><br />
                                }                            
                            </dd>
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.Authors)
                            </dt>
                            <dd class = "col-sm-10">
                                @foreach (var author in Model.book.Authors)
                                {
                                    <a  class="link-secondary" asp-controller="Authors" asp-action="Details" asp-route-id="@author.Id">@Html.DisplayFor(modelItem => author.FullName)</a><br />
                                }  
                            </dd>
                            <dt class = "col-sm-2">
                                @Html.DisplayNameFor(model => model.book.Rating)
                            </dt>
                            <dd class = "col-sm-10">
                                <partial name="_RatingStars" model="@Model.book.Rating"/> 
                            </dd>
                        </dl>
                     </div>
                </div>
           </div>
        </div>
    
</div>

<div>


    @if (signInManager.IsSignedIn(User) && User.IsInRole("Admin")) {
        <a asp-action="Edit" asp-route-id="@Model?.book.Id">Edit </a> 
          }
    <a  class="link-secondary" asp-action="Index">Tillbaka</a>
</div>


@if (signInManager.IsSignedIn(User)){

<partial name="_ReviewPartial" model="Model.review" />
   
}
else {
    <p>Logga in för att kunna skriva en recension. <a  class="link-secondary" asp-controller="account" asp-action="login" asp-route-returnurl="@routeUrl"> Logga in </a></p>
}


@if (Model.reviews.Any())
{
    <br />
    <p>Sortera på:
   <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.CreatedByAscDescSortParam">Användare</a>
   @*<a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.TitleAscDescSortParam">Title ASC/DESC</a>*@
   <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.RatingAscDescSortParam">Betyg</a>
   <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.CreatedAscDescSortParam">Datum</a>
   @*<a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.TextAscDescSortParam">Text ASC/DESC</a>*@
</p>


@foreach (var item in Model.reviews) {
    <div class="d-flex">
        <div class="m-2">
            @Html.DisplayFor(modelItem => item.CoolBooksUser.UserName)

            @{double rating = (double)item.Rating;}
            <partial name="_RatingStars" model="@rating"/>
            <partial name="_ReviewButtons" model="item" />
            @Html.DisplayFor(modelItem => item.Created)

             @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                {
                   <a asp-action="Block" asp-controller="Reviews" asp-route-id="@item.Id">Block</a>
                }

                @if (item.CreatedBy == userManager.GetUserId(User) || User.IsInRole("Admin" ))
                {
                    <a asp-action="Edit" asp-controller="Reviews" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Delete" asp-controller="Reviews" asp-route-id="@item.Id">Delete</a>
                }       
        </div>
        <div class="m-2 w-100">
            
            <a class="link-secondary fw-bold" asp-controller="Reviews" asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
            

            <p>@Html.DisplayFor(modelItem => item.Text)</p>

                

                <a asp-controller="Comments" asp-action="CreateReviewComment" asp-route-id="@item.Id">Kommentera</a>
                <br>
                <br>
                <partial name="_comment" model="item.Comments" />
        </div>
    </div>
}
    

}
else
{
<h3>Det finns inga reviews ännu... var den första som rescenserar?</h3>   

}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<partial name="_ButtonsScripts" />