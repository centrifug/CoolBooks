@*@model IEnumerable<CoolBooks.Models.Review>*@
@model PaginatedList<CoolBooks.Models.Review>
@{
    ViewData["Title"] = "Index";
    
    var controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var action = this.ViewContext.RouteData.Values["action"].ToString();
    var route = ViewContext.RouteData.Values["id"];
  
}


<h1>Recensioner.</h1>

<p>
    Sortera på:
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.BookAscDescSortParam">Bok</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.TitleAscDescSortParam">Titel</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.TextAscDescSortParam">Text</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.RatingAscDescSortParam">Betyg</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.LikesAscDescSortParam">Likes</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.DislikesAscDescSortParam">Dislikes</a>
    <a class="link-secondary" asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.BookAscDescSortParam">Skapad</a>
</p>


@foreach (var item in Model) {

    <div class="d-flex">
            <div class="m-3 d-flex flex-column justify-content-center align-content-center">
                
                <a asp-controller="Books" asp-action="Details" asp-route-id="@item.Id"><img src=" @item.Book.ImagePath" class="card-img-thumbnail" alt="..." width="200px" height="297px"></a>   
                  <div>
                    @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                    {
                       <a asp-action="Block" asp-controller="Reviews" asp-route-id="@item.Id">Block</a>
                    }
                    @if (item.CreatedBy == userManager.GetUserId(User) || User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>                        
                    }
                  </div>
            </div>
            <div class="d-flex flex-column m-3 border border-3 border-white p-3 rounded  w-100">
                <div>
                    <h2>
                        <a class="link-secondary" asp-controller="Reviews" asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
                    </h2>
                    
                        <a class="link-secondary" asp-controller="Books" asp-action="Details" asp-route-id="@item.BookId">@item.Book.Title</a>   
                </div>

                <div>
                    @{ double rating = (double)item.Rating;}
                    <partial name="_RatingStars" model="@rating" />
                </div>
                    
                    <p class="me-2 mb-0">Skapad: @Html.DisplayFor(modelItem => item.Created)</p>
                    <p class="me-2 mb-1">Likes: @Html.DisplayFor(modelItem => item.LikeCount) Dislikes: @Html.DisplayFor(modelItem => item.DisLikeCount)</p>

                <div class="d-flex">
                    <p class="text-start">@Html.DisplayFor(modelItem => item.Text)</p>
                
                </div>
            </div>        
        </div>

}
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
@for(int i = 1; i <= Model.TotalPages; i++)
{
    bool hej = true;
    if (Model.PageIndex == i)
    {
        hej = false;
        
    } 
    else
    {
        hej = true;
        
    }
    var currentDisabled = !hej ? "disabled" : "";
    <a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(i)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @currentDisabled">
    @i
</a>
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>



