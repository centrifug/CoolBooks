@model CreateQuizViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Quiz</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            
            <p class="mt-4">Genres/tags: <input type="text" id="filterGenre" /></p>
            <span asp-validation-for="Genres" class="text-danger"></span>
            <div class="form-group overflow-auto" style="height: 200px;">

            
            @for (int i = 0; i < Model.Genres.Count; i++)
            {
                <div class="form-check m-1 genre" value="@Model.Genres[i].GenreName">
                    <input type="hidden" asp-for="@Model.Genres[i].GenreId" />
                    <input type="hidden" asp-for="@Model.Genres[i].GenreName" />
                    <input asp-for="@Model.Genres[i].IsSelected" class="form-check-input" type="checkbox"/>
                    <label class="form-check-label" asp-for="@Model.Genres[i]">
                        @Model.Genres[i].GenreName 
                    </label>
                </div>
            }                
            </div>

            <div class="form-group">
                <input type="submit" value="Skapa quiz!" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
