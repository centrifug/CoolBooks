@model IEnumerable<CoolBooks.Models.Genre>

@{
    ViewData["Title"] = "Index";
    var controller = this.ViewContext.RouteData.Values["controller"].ToString();
    var action = this.ViewContext.RouteData.Values["action"].ToString();
    var route = ViewContext.RouteData.Values["id"];
}

<h1>Genre.</h1>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.FirstNameAscDescSortParam">Name ASC/DESC</a>
                @*@Html.DisplayNameFor(model => model.Name)*@
            </th>
            <th>
                <a asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.DescriptionAscDescSortParam">Description ASC/DESC</a>
                @*@Html.DisplayNameFor(model => model.Description)*@
            </th>
            <th>
                <a asp-controller="@controller" asp-action="@action" asp-route-id="@route" asp-route-sortOrder="@ViewBag.CreatedAscDescSortParam">Created ASC/DESC</a>
                @*@Html.DisplayNameFor(model => model.Created)*@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-controller="Genres" asp-route-id="@item.Id">@item.Name</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>                    
                }                
            </td>
        </tr>
}
    </tbody>
</table>
